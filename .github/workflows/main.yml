name: Auto-Build
on: [workflow_dispatch]

jobs:
  build_linux:
    name: Ubuntu Build and Test
    runs-on: ubuntu-20.04
    steps:
      - name: Grab Dependencies
        run: |
            wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
            sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-17 main'
            sudo apt-get update
            sudo apt install libxcursor-dev libegl-dev clang-17 llvm-17 llvm-17-dev

      - name: Checkout Project
        uses: actions/checkout@v4
    
      - name: Checkout Odin
        uses: actions/checkout@v4
        with:
          repository: Odin-lang/odin
          path: odin

      - name: Build Odin
        run: |
          cd odin
          ./build_odin.sh
          make -C vendor/stb/src
          echo $PWD >> $GITHUB_PATH
        
      - name: Build Project
        run: |
          ./build.sh release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: alarm_linux
          path: bin/alarm

  build_osx_x86:
    name: OSX x86 Build and Test
    runs-on: macos-13
    steps:
      - name: Grab Project Dependencies
        run: |
          brew install sdl2 llvm@17
          echo "/usr/local/opt/llvm@17/bin" >> $GITHUB_PATH
    
      - name: Checkout Project
        uses: actions/checkout@v4
    
      - name: Checkout Odin
        uses: actions/checkout@v4
        with:
          repository: Odin-lang/odin
          path: odin

      - name: Build Odin
        run: |
          cd odin
          ./build_odin.sh
          echo $PWD >> $GITHUB_PATH
        
      - name: Build Project
        run: |
          ./build.sh release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: alarm_osx_x86
          path: bin/alarm

  build_osx_arm:
    name: OSX ARM Build and Test
    runs-on: macos-14
    steps:
      - name: Grab Project Dependencies
        run: |
          brew install sdl2 llvm@17
          echo "/opt/homebrew/opt/llvm@17/bin" >> $GITHUB_PATH
    
      - name: Checkout Project
        uses: actions/checkout@v4
    
      - name: Checkout Odin
        uses: actions/checkout@v4
        with:
          repository: Odin-lang/odin
          path: odin

      - name: Build Odin
        run: |
          cd odin
          ./build_odin.sh
          echo $PWD >> $GITHUB_PATH
        
      - name: Build Project
        run: |
          ./build.sh release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: alarm_osx_arm
          path: bin/alarm

  build_windows:
    name: Windows Build and Test
    runs-on: windows-2022
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
    
      - name: Checkout Odin
        uses: actions/checkout@v4
        with:
          repository: Odin-lang/odin
          path: odin

      - name: Build Odin
        run: |
          cd odin
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          & ./build.bat
          $CUR_PATH = (Get-Item .).FullName
          Add-Content $env:GITHUB_PATH $CUR_PATH
        
      - name: Build Project
        run: |
          ./build.bat release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: alarm_windows
          path: bin/alarm.exe

  collect_results:
    name: Collect Results
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows, build_osx_arm, build_osx_x86]
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
      
      - name: Grab Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: alarm_windows
          path: alarm_windows

      - name: Grab Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: alarm_linux
          path: alarm_linux

      - name: Grab OSX ARM artifacts
        uses: actions/download-artifact@v4
        with:
          name: alarm_osx_arm
          path: alarm_osx_arm          

      - name: Grab OSX X86 artifacts
        uses: actions/download-artifact@v4
        with:
          name: alarm_osx_x86
          path: alarm_osx_x86
        
      - name: Package artifacts
        run: |
          mkdir alarm_pkg

          curl -L -o lipo https://github.com/konoui/lipo/releases/latest/download/lipo_Linux_amd64
          chmod +x lipo
          ./lipo -create -output alarm alarm_osx_arm/alarm alarm_osx_x86/alarm
          chmod +x alarm
          ./package_osx.sh alarm_pkg/alarm.app alarm

          cp resources/FiraCode_LICENSE.txt alarm_pkg/.
          cp resources/LICENSE.txt          alarm_pkg/.
          cp resources/SDL2.dll             alarm_pkg/.
          cp alarm_linux/alarm              alarm_pkg/alarm_linux
          cp alarm_windows/alarm.exe        alarm_pkg/alarm_windows.exe
          chmod +x alarm_pkg/alarm_linux

          DATE=$(date '+%Y_%m_%d')
          echo "DATE=$DATE" >> $GITHUB_ENV
          mv alarm_pkg alarm_$DATE
          zip -r alarm_$DATE.zip alarm_$DATE

      - name: Upload Release Build
        uses: actions/upload-artifact@v4
        with:
          name: alarm_${{ env.DATE }}
          path: alarm_${{ env.DATE }}.zip
